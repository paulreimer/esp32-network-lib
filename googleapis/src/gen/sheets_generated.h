// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_SHEETS_GOOGLEAPIS_SHEETS_H_
#define FLATBUFFERS_GENERATED_SHEETS_GOOGLEAPIS_SHEETS_H_

#include "flatbuffers/flatbuffers.h"

namespace googleapis {
namespace Sheets {

struct InsertRowIntent;

inline const flatbuffers::TypeTable *InsertRowIntentTypeTable();

struct InsertRowIntent FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  static const flatbuffers::TypeTable *MiniReflectTypeTable() {
    return InsertRowIntentTypeTable();
  }
  static FLATBUFFERS_CONSTEXPR const char *GetFullyQualifiedName() {
    return "googleapis.Sheets.InsertRowIntent";
  }
  enum {
    VT_SPREADSHEET_ID = 4,
    VT_SHEET_NAME = 6,
    VT_VALUES_JSON = 8
  };
  const flatbuffers::String *spreadsheet_id() const {
    return GetPointer<const flatbuffers::String *>(VT_SPREADSHEET_ID);
  }
  flatbuffers::String *mutable_spreadsheet_id() {
    return GetPointer<flatbuffers::String *>(VT_SPREADSHEET_ID);
  }
  const flatbuffers::String *sheet_name() const {
    return GetPointer<const flatbuffers::String *>(VT_SHEET_NAME);
  }
  flatbuffers::String *mutable_sheet_name() {
    return GetPointer<flatbuffers::String *>(VT_SHEET_NAME);
  }
  const flatbuffers::String *values_json() const {
    return GetPointer<const flatbuffers::String *>(VT_VALUES_JSON);
  }
  flatbuffers::String *mutable_values_json() {
    return GetPointer<flatbuffers::String *>(VT_VALUES_JSON);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffset(verifier, VT_SPREADSHEET_ID) &&
           verifier.Verify(spreadsheet_id()) &&
           VerifyOffset(verifier, VT_SHEET_NAME) &&
           verifier.Verify(sheet_name()) &&
           VerifyOffset(verifier, VT_VALUES_JSON) &&
           verifier.Verify(values_json()) &&
           verifier.EndTable();
  }
};

struct InsertRowIntentBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_spreadsheet_id(flatbuffers::Offset<flatbuffers::String> spreadsheet_id) {
    fbb_.AddOffset(InsertRowIntent::VT_SPREADSHEET_ID, spreadsheet_id);
  }
  void add_sheet_name(flatbuffers::Offset<flatbuffers::String> sheet_name) {
    fbb_.AddOffset(InsertRowIntent::VT_SHEET_NAME, sheet_name);
  }
  void add_values_json(flatbuffers::Offset<flatbuffers::String> values_json) {
    fbb_.AddOffset(InsertRowIntent::VT_VALUES_JSON, values_json);
  }
  explicit InsertRowIntentBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  InsertRowIntentBuilder &operator=(const InsertRowIntentBuilder &);
  flatbuffers::Offset<InsertRowIntent> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<InsertRowIntent>(end);
    return o;
  }
};

inline flatbuffers::Offset<InsertRowIntent> CreateInsertRowIntent(
    flatbuffers::FlatBufferBuilder &_fbb,
    flatbuffers::Offset<flatbuffers::String> spreadsheet_id = 0,
    flatbuffers::Offset<flatbuffers::String> sheet_name = 0,
    flatbuffers::Offset<flatbuffers::String> values_json = 0) {
  InsertRowIntentBuilder builder_(_fbb);
  builder_.add_values_json(values_json);
  builder_.add_sheet_name(sheet_name);
  builder_.add_spreadsheet_id(spreadsheet_id);
  return builder_.Finish();
}

inline flatbuffers::Offset<InsertRowIntent> CreateInsertRowIntentDirect(
    flatbuffers::FlatBufferBuilder &_fbb,
    const char *spreadsheet_id = nullptr,
    const char *sheet_name = nullptr,
    const char *values_json = nullptr) {
  return googleapis::Sheets::CreateInsertRowIntent(
      _fbb,
      spreadsheet_id ? _fbb.CreateString(spreadsheet_id) : 0,
      sheet_name ? _fbb.CreateString(sheet_name) : 0,
      values_json ? _fbb.CreateString(values_json) : 0);
}

inline const flatbuffers::TypeTable *InsertRowIntentTypeTable() {
  static const flatbuffers::TypeCode type_codes[] = {
    { flatbuffers::ET_STRING, 0, -1 },
    { flatbuffers::ET_STRING, 0, -1 },
    { flatbuffers::ET_STRING, 0, -1 }
  };
  static const char * const names[] = {
    "spreadsheet_id",
    "sheet_name",
    "values_json"
  };
  static const flatbuffers::TypeTable tt = {
    flatbuffers::ST_TABLE, 3, type_codes, nullptr, nullptr, names
  };
  return &tt;
}

}  // namespace Sheets
}  // namespace googleapis

#endif  // FLATBUFFERS_GENERATED_SHEETS_GOOGLEAPIS_SHEETS_H_
